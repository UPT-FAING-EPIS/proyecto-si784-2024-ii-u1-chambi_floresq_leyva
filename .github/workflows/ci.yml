name: Build, Release and NuGet Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Esto detecta cualquier tag que empiece con 'v' (por ejemplo, v1.0.0, v2.1.0)

  workflow_run:
    workflows:
      - "Sonar Continuous Integration"
      - "Snyk Security"
      - "Semgrep Analysis"
    types:
      - completed

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET Framework
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet Packages
        run: nuget restore ProyectoFinal.sln

      - name: Clean Build Directories
        run: |
          if (Test-Path "${{ github.workspace }}/ProyectoFinal/bin") {
            Remove-Item -Recurse -Force "${{ github.workspace }}/ProyectoFinal/bin"
          }
          if (Test-Path "${{ github.workspace }}/ProyectoFinal/obj") {
            Remove-Item -Recurse -Force "${{ github.workspace }}/ProyectoFinal/obj"
          }

      - name: Build Project
        run: msbuild ProyectoFinal.sln /p:Configuration=Release /p:Platform="Any CPU"

      - name: Verify Build Artifacts
        run: |
          dir ${{ github.workspace }}/ProyectoFinal/bin/Release/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ${{ github.workspace }}/ProyectoFinal/bin/Release/

  nuget-package:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET Framework
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Add NuGet Source
        run: |
          dotnet nuget add source --username jf2021070309 --password ${{ secrets.NEW_TOKEN_NUGET }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/UPT-FAING-EPIS/index.json"

      - name: Copy Template nuspec
        run: |
          cd ProyectoFinal
          copy ProyectoFinal.template.nuspec ProyectoFinal.nuspec

      - name: Determine Next Version
        id: determine_version
        run: |
          # Define la versión base
          $baseVersion = "1.0.4"
          # Incrementa la parte menor de la versión
          $versionParts = $baseVersion -split '\.'
          $versionParts[2] = [int]$versionParts[2] + 1
          $nextVersion = "$($versionParts[0]).$($versionParts[1]).$($versionParts[2])"
          echo "::set-output name=next_version::$nextVersion"

      - name: Replace Version in nuspec
        run: |
          cd ProyectoFinal
          # Reemplazar la versión en el archivo .nuspec con la nueva versión
          (Get-Content ProyectoFinal.nuspec) -replace '{VERSION}', '${{ steps.determine_version.outputs.next_version }}' | Set-Content ProyectoFinal.nuspec

      - name: Pack NuGet Package from nuspec 
        run: |
          cd ProyectoFinal
          nuget pack ProyectoFinal.nuspec

      - name: Push NuGet Package to GitHub Packages
        run: |
          cd ProyectoFinal
          nuget push ProyectoFinal.${{ steps.determine_version.outputs.next_version }}.nupkg -Source github -ApiKey ${{ secrets.NEW_TOKEN_NUGET }} -SkipDuplicate

  release:
    needs: nuget-package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          body: |
            ### Cambios en esta versión:
            - Mejora 1
            - Corrección de errores
            - Actualización de dependencias
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
