name: NuGet Package Publish
on:
  push:
    branches:
      - nugget

jobs:
  nuget-package:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET Framework
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Add NuGet Source
        run: |
          dotnet nuget add source --username jf2021070309 --password ${{ secrets.NEW_TOKEN_NUGET }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/UPT-FAING-EPIS/index.json"

      - name: Copy Template nuspec
        run: |
          cd ProyectoFinal
          copy ProyectoFinal.template.nuspec ProyectoFinal.nuspec

      - name: Get Latest Package Version
        id: get_latest_version
        run: |
          $response = Invoke-RestMethod -Uri "https://nuget.pkg.github.com/UPT-FAING-EPIS/index.json" -Headers @{Authorization = "Bearer ${{ secrets.NEW_TOKEN_NUGET }}"}
          $latestVersion = ($response.versions | Sort-Object -Descending | Select-Object -First 1)
          echo "::set-output name=latest_version::$latestVersion"

      - name: Determine Next Version
        id: determine_version
        run: |
          $latestVersion = "${{ steps.get_latest_version.outputs.latest_version }}"
          $versionParts = $latestVersion -split '\.'
          $versionParts[2] = [int]$versionParts[2] + 1
          $nextVersion = "$($versionParts[0]).$($versionParts[1]).$($versionParts[2])"
          echo "::set-output name=next_version::$nextVersion"

      - name: Replace Version in nuspec
        run: |
          cd ProyectoFinal
          (Get-Content ProyectoFinal.nuspec) -replace '{VERSION}', '${{ steps.determine_version.outputs.next_version }}' | Set-Content ProyectoFinal.nuspec

      - name: Pack NuGet Package from nuspec 
        run: |
          cd ProyectoFinal
          nuget pack ProyectoFinal.nuspec

      - name: Push NuGet Package to GitHub Packages
        run: |
          cd ProyectoFinal
          nuget push ProyectoFinal.${{ steps.determine_version.outputs.next_version }}.nupkg -Source github -ApiKey ${{ secrets.NEW_TOKEN_NUGET }} -SkipDuplicate